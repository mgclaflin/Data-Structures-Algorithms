1. Use "git init -b main" to initiate a local git repository
2. "git status" useful command to get status/info
-- by default created files will be a part of the local working directory, you will need to explicity add to the git branch/repository
-- starts on "master" branch but we don't want to use this to start
3. use "git init -b main" to create a main branch
4. "git add *" to add all files to staging area to be tracked/managed by git. use "git add <file name>" for a specific file
5. "git log" command to see history of commits
6. "git commit -m "message" " to commit all files/file changes to the branch
-- must save changes within your local working directory before you can push the changes to git
7. must add changes to staging area "git add *" and then use "git commit-m "message" "
8. you can do staging & commiting it on command "git commit -a -m "message" "


"git diff" command, if the file is in staging then use "git diff --staged"
- this command allows you to display/see the changes between your local file & the file in the git repository


how to remove a file from the git repository - using the "tempFile.txt" for this example
-- the tempFile is currently untracked, then use "git add *", all files are now being tracked, "git commit"
-- to remove the file from the git repository that we don't want to be there we use the following commands
1. to delete from the git repository use "git rm --cached <file path>tempFile.txt"
2. must include the file path to the file name otherwise it will not be recognized
3. now you can remove it from the project by deleting it from the local directory or you can make sure you don' add it to future commits/staging



All the work above has been on a local repository, everything following will be connected to a remote repository
this enables collaboration with people on multiple devices/on your team working on different parts of functionality

"git clone "git hub repository link" "
-- use this command to copy a github repository to your local repository/device

copy SSH link from created git hub repository and do the following commands to push your local repository to it
1. git remote add origin <SSH link>
-- it should verify your login credentials with a pop up
2. git branch -M main
3. ssh-keygen -o ***timestamp 22:18***
4. git push -u origin main


pushing changes commited from local repository to remote repository
1. "git commit -a -m """
2. "git push origin main"
-- use to command above to push to remote repository. replace "main" with the branch you want to push to if it is different
-- I am able to see the changes made within the commit details on github

git remote -v
-- command above is used to see origin details


TAGGING
1. "git tag" to show history of tags
2. Annotated tagging: "git tag -a <t> -m <m>" <t>- tag/version number v1.0 <m>- message to be shown
3. "git show <tag>" used to show details for the tag you select
4. "git push origin <tag>" use the code to push the tags individually

CLONING
1. "git clone <http/ssh>"
-- above command downloads the remote repository from the location specified


BRANCHING
1. "git switch -c <b>" or "git checkout -c <b>" <b>- new branch name that is to be created
-- the command above is used to create a branch

1. "git switch <b>" or "git checkout <b>" switch is the new version
-- the command above is used for switching to a branch

1. "git branch"
-- the command above is used for checking on branches & which one is active
2. "git branch --all"
-- the command above is to view all branches including local & remote

-- you can commit and add changes to the branch that you are currently using
-- when you switch branches the changes made in one branch will not be present in the other branch

1. "git branch -d <b>" <b>- branch name to delete
-- the command above deletes the named branch




